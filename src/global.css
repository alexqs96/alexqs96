@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: Geist;
  font-weight: 100 900;
  font-display: swap;
  src: url("/fonts/Geist/GeistVariableVF.woff2") format("woff2");
}

:root {
  font-family: Geist, sans-serif;
  font-feature-settings: "liga" 1, "calt" 1;
  line-height: normal;
  scroll-behavior: smooth;
  scrollbar-gutter: stable;
}

html .yarl__toolbar .yarl__button {
  margin-right: 1rem;
}

@layer utilities {
  :focus-within {
    @apply outline-transparent outline ring-black/10;
  }

  .wave {
    display: inline-block;
    transition: transform 2s;
    animation: wave 2s linear infinite;
    transform-origin: bottom right;
  }

  @keyframes wave {
    0%,
    100% {
      transform: rotate(0deg);
    }
    50% {
      transform: rotate(4deg);
    }
  }

  .input {
    @apply rounded-lg border duration-300 focus-within:border-black/50 transition ring ring-transparent;
  }

  .invalid {
    @apply border-pink-600 focus-within:ring-pink-600/35;
  }

  .invalid-msg {
    @apply inline-flex text-xs 2xl:text-sm px-2 py-1 bg-pink-50 text-pink-700 rounded-lg w-fit opacity-90 fadeIn;
  }

  .invalid-msg svg {
    display: inline-block;
    margin-block: auto;
    margin-right: 0.5ch;
  }

  .press {
    @apply active:scale-95 transition;
  }

  .button-main {
    @apply bg-gradient-to-t from-main to-indigo-500 text-white hover:!shadow-main/10;
  }

  .button {
    @apply text-shadow rounded-md transition duration-200 shadow-lg shadow-transparent active:scale-95 hover:shadow-black/10;
  }

  .button-base {
    @apply py-1.5 px-3.5;
  }

  .button-sm {
    @apply py-1 px-2.5;
  }

  ::selection {
    @apply bg-main;
    color: #fff;
  }

  img::selection {
    @apply bg-pink-400/20;
  }

  .text-shadow {
    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.25);
  }

  .hero-msg {
    font-size: clamp(3.5rem, 1rem + 9vw, 8.5rem);
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    75% {
      opacity: 0.5;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fadeDown {
    from {
      opacity: 0;
      transform: translate3d(0, -75%, 0);
    }

    to {
      opacity: 1;
      transform: translate3d(0, 0, 0);
    }
  }

  .fadeDown {
    transition: transform 0.75s linear box-shadow 1s;
    animation: fadeDown 650ms cubic-bezier(0.77, 0, 0.175, 1) both;
    will-change: opacity;
  }

  .fadeIn {
    transition: transform 0.2s linear;
    animation: fadeIn 0.15s linear;
    animation-fill-mode: both;
    will-change: opacity;
  }

  .gradient::before,
  .gradient::after {
    content: "";
    position: absolute;
    width: 25dvw;
    height: 35dvh;
    @apply max-sm:w-[45dvw] max-sm:h-[45dvh];
    border-radius: 50%;
    transition: transform 0.2s linear, right 0.75s, left 0.75s;
    animation: fadeIn 0.15s linear;
    animation-fill-mode: both;
    will-change: opacity;
  }

  .gradient::before {
    background: conic-gradient(rgba(55, 0, 255, 0.2), rgba(56, 20, 233, 0.6));
    filter: blur(80px);
    top: 25%;
    @apply max-sm:top-[15%];
    right: 25%;
  }

  .gradient:hover::before {
    right: 20%;
  }

  .gradient::after {
    background: conic-gradient(rgba(236, 15, 225, 0.6), rgba(247, 0, 255, 0.2));
    filter: blur(80px);
    top: 45%;
    @apply max-sm:top-[40%];
    right: 0%;
  }

  .gradient:hover::after {
    right: 5%;
  }
}
